# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

variables:
  tag: 63
  dockerRegistryServiceConnection: '9e7ff68f-1ad2-4ddd-b903-563f1803c2f8'
  containerRegistry: 'cud64hfcidjdbvi9gjh4d.azurecr.io'

steps:
- task: Docker@2
  inputs:
    containerRegistry: 'cud64hfcidjdbvi9gjh4d'
    command: 'login'
    addPipelineData: false
    addBaseImageData: false
- task: Docker@2
  inputs:
    containerRegistry: 'Prod_Container_Registry'
    command: 'login'
    addPipelineData: false
    addBaseImageData: false
- script: |
    docker pull cud64hfcidjdbvi9gjh4d.azurecr.io/rdbw-frontend:$(tag)
    docker pull cud64hfcidjdbvi9gjh4d.azurecr.io/rdbw-backend:$(tag)
    docker pull cud64hfcidjdbvi9gjh4d.azurecr.io/rdbw-backend-static:$(tag)
  displayName: 'Pull images from non-prod registry.'
- script: |
    docker tag cud64hfcidjdbvi9gjh4d.azurecr.io/rdbw-frontend:$(tag) nxufkehscig5mqw9cdnbvur.azurecr.io/rdbw-frontend:$(tag)
    docker tag cud64hfcidjdbvi9gjh4d.azurecr.io/rdbw-backend:$(tag) nxufkehscig5mqw9cdnbvur.azurecr.io/rdbw-backend:$(tag)
    docker tag cud64hfcidjdbvi9gjh4d.azurecr.io/rdbw-backend-static:$(tag) nxufkehscig5mqw9cdnbvur.azurecr.io/rdbw-backend-static:$(tag)
  displayName: 'Tag images for prod regsitry'
- script: |
    docker push nxufkehscig5mqw9cdnbvur.azurecr.io/rdbw-frontend:$(tag)
    docker push nxufkehscig5mqw9cdnbvur.azurecr.io/rdbw-backend:$(tag)
    docker push nxufkehscig5mqw9cdnbvur.azurecr.io/rdbw-backend-static:$(tag)
  displayName: 'Push images to prod registry.'
